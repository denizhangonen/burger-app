{"version":3,"sources":["components/UI/Input/Input.js","components/UI/Input/Input.css","components/Order/CheckoutSummary/CheckoutSummary.css","containers/ContactData/ContactData.css","components/Order/CheckoutSummary/CheckoutSummary.js","containers/ContactData/ContactData.js","containers/Checkout/Checkout.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_Input_css__WEBPACK_IMPORTED_MODULE_1__","_Input_css__WEBPACK_IMPORTED_MODULE_1___default","input","props","inputElement","inputClasses","classes","InputElement","invalid","shouldValidate","touched","push","Invalid","elementType","a","createElement","Object","assign","className","join","elementConfig","value","onChange","changed","options","map","option","key","displayValue","validationError","ValidationError","Input","Label","label","module","exports","CheckoutSummary","ContactData","checkoutSummary","react_default","style","width","margin","Burger","ingredients","Button","btnType","clicked","checkoutCancelled","checkoutContinued","state","orderForm","name","type","placeholder","validation","required","valid","street","zipCode","minLength","maxLength","country","email","deliveryMethod","totalPrice","formIsValid","orderHandler","event","preventDefault","formData","formElementIdentifier","_this","order","ingredient","ings","price","orderData","userId","onOrderBurger","token","inputChangedHandler","inputIdentifier","updatedFormElement","updateObject","target","checkValidity","updatedOrderForm","defineProperty","console","log","setState","_this2","this","formElementsArray","id","config","form","onSubmit","formElement","disabled","loading","Spinner","Component","connect","burgerBuilder","auth","dispatch","actions","withErrorHandler","axios","Checkout","checkoutCancelledHandler","history","goBack","checkoutContinuedHandler","replace","summary","Redirect","to","purchasedRedirect","purchased","CheckoutSummary_CheckoutSummary","Route","path","match","component"],"mappings":"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","file":"static/js/3.2eea484c.chunk.js","sourcesContent":["import React from \"react\";\n\nimport classes from \"./Input.css\";\n\nconst input = props => {\n  let inputElement = null;\n  let inputClasses = [classes.InputElement];\n\n  if(props.invalid && props.shouldValidate && props.touched){\n      inputClasses.push(classes.Invalid);\n  }\n\n  switch (props.elementType) {\n    case \"input\":\n      inputElement = (\n        <input\n          className={inputClasses.join(\" \")}\n          {...props.elementConfig}\n          value={props.value}\n          onChange={props.changed}\n        />\n      );\n      break;\n    case \"textarea\":\n      inputElement = (\n        <textarea\n          className={inputClasses.join(\" \")}\n          {...props.elementConfig}\n          value={props.value}\n          onChange={props.changed}\n        />\n      );\n      break;\n    case \"select\":\n      inputElement = (\n        <select\n          className={inputClasses.join(\" \")}\n          {...props.elementConfig}\n          value={props.value}\n          onChange={props.changed}\n        >\n          {props.elementConfig.options.map(option => (\n            <option key={option.value} value={option.value}>\n              {option.displayValue}\n            </option>\n          ))}\n        </select>\n      );\n      break;\n    default:\n      inputElement = (\n        <input\n          className={inputClasses.join(\" \")}\n          {...props.elementConfig}\n          value={props.value}\n        />\n      );\n  }\n\n  let validationError = null;\n  if(props.invalid && props.touched){\n      validationError = <p className={classes.ValidationError}>Please enter a valid value!</p>\n  }\n\n  return (\n    <div className={classes.Input}>\n      <label className={classes.Label}>{props.label}</label>\n      {inputElement}\n      {validationError}\n    </div>\n  );\n};\n\nexport default input;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input__Input__s67N0\",\"Label\":\"Input__Label___n-1m\",\"InputElement\":\"Input__InputElement__2-aFx\",\"Invalid\":\"Input__Invalid__1sl1p\",\"ValidationError\":\"Input__ValidationError__1ElSg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary__CheckoutSummary__1xBm4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData__ContactData__31cPb\"};","import React from \"react\";\nimport Burger from \"../../Burger/Burger\";\nimport Button from \"../../UI/Button/Button\";\n\nimport classes from \"./CheckoutSummary.css\";\n\nconst checkoutSummary = props => {\n  return (\n    <div className={classes.CheckoutSummary}>\n      <h1>We hope it tastes well!</h1>\n      <div style={{ width: \"100%\", margin: \"auto\" }}>\n        <Burger ingredients={props.ingredients} />\n      </div>\n      <Button btnType=\"Danger\" clicked={props.checkoutCancelled}>\n        CANCEL\n      </Button>\n      <Button btnType=\"Success\" clicked={props.checkoutContinued}>\n        CONTINUE\n      </Button>\n    </div>\n  );\n};\n\nexport default checkoutSummary;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport axios from \"../../axios-orders\";\nimport Button from \"../../components/UI/Button/Button\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport Input from \"../../components/UI/Input/Input\";\nimport classes from \"./ContactData.css\";\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\nimport * as actions from \"../../store/actions/index\";\nimport { updateObject, checkValidity } from \"../../shared/utility\";\n\nclass ContactData extends Component {\n  state = {\n    orderForm: {\n      name: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"text\",\n          placeholder: \"Your Name\"\n        },\n        value: \"\",\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false\n      },\n      street: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"text\",\n          placeholder: \"Your Street\"\n        },\n        value: \"\",\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false\n      },\n      zipCode: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"text\",\n          placeholder: \"ZIP Code\"\n        },\n        value: \"\",\n        validation: {\n          required: true,\n          minLength: 5,\n          maxLength: 5\n        },\n        valid: false,\n        touched: false\n      },\n      country: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"text\",\n          placeholder: \"Country\"\n        },\n        value: \"\",\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false\n      },\n      email: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"email\",\n          placeholder: \"Your E-mail\"\n        },\n        value: \"\",\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false\n      },\n      deliveryMethod: {\n        elementType: \"select\",\n        elementConfig: {\n          options: [\n            { value: \"fastest\", displayValue: \"Fastest\" },\n            { value: \"cheapest\", displayValue: \"Cheapest\" }\n          ]\n        },\n        valid: true,\n        value: \"fastest\",\n        validation: {}\n      }\n    },\n    totalPrice: 0,\n    formIsValid: false\n  };\n\n  orderHandler = event => {\n    event.preventDefault();\n    const formData = {};\n    for (let formElementIdentifier in this.state.orderForm) {\n      // console.log(formElementIdentifier)\n      formData[formElementIdentifier] = this.state.orderForm[\n        formElementIdentifier\n      ].value;\n    }\n\n    const order = {\n      ingredient: this.props.ings,\n      price: this.props.price,\n      orderData: formData,\n      userId: this.props.userId\n    };\n    this.props.onOrderBurger(order, this.props.token);\n  };\n\n  inputChangedHandler = (event, inputIdentifier) => {\n    const updatedFormElement = updateObject(\n      this.state.orderForm[inputIdentifier],\n      {\n        value: event.target.value,\n        valid: checkValidity(\n          event.target.value,\n          this.state.orderForm[inputIdentifier].validation\n        ),\n        touched: true\n      }\n    );\n\n    const updatedOrderForm = updateObject(this.state.orderForm, {\n      [inputIdentifier]: updatedFormElement\n    });\n\n    let formIsValid = true;\n    for (let inputIdentifier in updatedOrderForm) {\n      // console.log(updatedOrderForm[inputIdentifier]);\n      formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\n    }\n    console.log(formIsValid);\n    this.setState({ orderForm: updatedOrderForm, formIsValid: formIsValid });\n  };\n\n  render() {\n    const formElementsArray = [];\n\n    for (let key in this.state.orderForm) {\n      formElementsArray.push({\n        id: key,\n        config: this.state.orderForm[key]\n      });\n    }\n\n    let form = (\n      <form onSubmit={this.orderHandler}>\n        {formElementsArray.map(formElement => (\n          <Input\n            key={formElement.id}\n            elementType={formElement.config.elementType}\n            elementConfig={formElement.config.elementConfig}\n            value={formElement.config.value}\n            invalid={!formElement.config.valid}\n            shouldValidate={formElement.config.validation}\n            touched={formElement.config.touched}\n            changed={event => this.inputChangedHandler(event, formElement.id)}\n          />\n        ))}\n        <Button btnType=\"Success\" disabled={!this.state.formIsValid}>\n          ORDER\n        </Button>\n      </form>\n    );\n    if (this.props.loading) {\n      form = <Spinner />;\n    }\n    return (\n      <div className={classes.ContactData}>\n        <h4>Enter your Contact Data</h4>\n        {form}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    ings: state.burgerBuilder.ingredients,\n    price: state.burgerBuilder.totalPrice,\n    loading: state.order.loading,\n    token: state.auth.token,\n    userId: state.auth.userId\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onOrderBurger: (orderData, token) =>\n      dispatch(actions.purchaseBurger(orderData, token))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withErrorHandler(ContactData, axios));\n","import React, { Component } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport CheckoutSummary from \"../../components/Order/CheckoutSummary/CheckoutSummary\";\nimport ContactData from \"../ContactData/ContactData\";\n\nclass Checkout extends Component {\n  // state = {\n  //   ingredients: null,\n  //   totalPrice: 0\n  // };\n\n  // componentWillMount() {\n  //   console.log(this.props);\n  //   //   console.log(this.props.location.search);\n  //   const query = new URLSearchParams(this.props.location.search);\n  //   const ingredients = {};\n  //   let price = 0;\n  //   for (let param of query.entries()) {\n  //     // console.log(params)\n  //     if (param[0] === \"price\") {\n  //       price = param[1];\n  //     } else {\n  //       ingredients[param[0]] = +param[1];\n  //     }\n  //   }\n  //   this.setState({ ingredients: ingredients, totalPrice: price });\n  // }\n\n  checkoutCancelledHandler = () => {\n    this.props.history.goBack();\n  };\n\n  checkoutContinuedHandler = () => {\n    this.props.history.replace(\"/checkout/contact-data\");\n  };\n\n  render() {\n    let summary = <Redirect to=\"/\" />;\n\n    if (this.props.ings) {\n      const purchasedRedirect = this.props.purchased ? (\n        <Redirect to=\"/\" />\n      ) : null;\n      summary = (\n        <div>\n          {purchasedRedirect}\n          <CheckoutSummary\n            ingredients={this.props.ings}\n            checkoutCancelled={this.checkoutCancelledHandler}\n            checkoutContinued={this.checkoutContinuedHandler}\n          />\n          <Route\n            path={this.props.match.path + \"/contact-data\"}\n            component={ContactData}\n          />\n        </div>\n      );\n    }\n\n    return summary;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    ings: state.burgerBuilder.ingredients,\n    purchased: state.order.purchased\n  };\n};\n\nexport default connect(mapStateToProps)(Checkout);\n"],"sourceRoot":""}